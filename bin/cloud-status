#!/usr/bin/env python3.4
# -*- mode: python; -*-
#
# cloud-status - Displays status of all managed nodes
#
# Copyright 2014 Canonical, Ltd.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import signal
import sys
import os

from cloudinstall import gui
from cloudinstall import pegasus
from cloudinstall import utils
from cloudinstall.maas.auth import MaasAuth

# TODO: Why does this crash?
# pegasus.wait_for_services()

def sig_handler(signum, frame):
    utils.reset_blanking()
    sys.exit(1)

for sig in (signal.SIGTERM, signal.SIGQUIT, signal.SIGINT, signal.SIGHUP):
    signal.signal(sig, sig_handler)

def get_data():
    """ Starts the polling routine.

    This initiates both maas and juju states, however, we only
    utilize maas if multi installation.
    """
    auth = MaasAuth() if not pegasus.SINGLE_SYSTEM else None
    return pegasus.poll_state(auth)

if __name__ == '__main__':
    gui = gui.PegasusGUI(get_data)
    sys.exit(gui.run())

